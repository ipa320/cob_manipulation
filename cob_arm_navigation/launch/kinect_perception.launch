<?xml version="1.0"?>
<launch>

	<arg name="pc1" default="localhost"/>
	<arg name="pc2" default="localhost"/>
	<arg name="pc3" default="localhost"/>

	<group>
		<!-- ToDo: 	make this cob3-X independent -->
		<!-- 		see cob_bringup (use symbolic names e.g. perception_pc = cob3-3-pc2, navigation_pc = cob3-3-pc1) -->		
		<!-- start the pipeline on pc2 for better performance -->
		<machine name="$(arg pc2)" address="$(arg pc2)" default="true"/>

		<include file="$(find cob_arm_navigation)/launch/cob_planning_environment.launch" />

		<!-- self filter Kinect points -->
	      	<node pkg="robot_self_filter" type="self_filter" respawn="true" name="stereo_self_filter" output="screen">
			<remap from="cloud_in" to="/cam3d/depth/points" />
			<remap from="cloud_out" to="/cam3d/depth/points_filtered2" />
			<param name="sensor_frame" type="string" value="head_cam3d_link" />
			<param name="subsample_value" type="double" value=".03"/>
			<rosparam command="load" file="$(find cob_arm_navigation)/config/$(env ROBOT)/self_filter.yaml" />
	      	</node>

	    	<node pkg="collider" type="collider_node" name="collider_node" respawn="true" output="screen">
			<param name="fixed_frame" type="string" value="base_link" />
			<param name="resolution" type="double" value="0.05" />
			<param name="max_range" type="double" value="5.0" />
			<param name="pruning_period" type="int" value="20" />
			<param name="origin_x" type="double" value="0.0" />
			<param name="origin_y" type="double" value="0.0" />
			<param name="origin_z" type="double" value="1.5" />
			<param name="dimension_x" type="double" value="2.5" />		<!-- -2.5 ... 2.5 -->
			<param name="dimension_y" type="double" value="2.5" />		<!-- -2.0 ... 2.0 -->
			<param name="dimension_z" type="double" value="1.5" />		<!--  0.0 ... 3.0 -->
			<param name="publish_static_over_dynamic_map" value="true" />
			<param name="sensor_model_hit" value= "0.8" />
			<param name="sensor_model_miss" value= "0.31" />
			<param name="sensor_model_min" value= "0.12" />
			<param name="sensor_model_max" value= "0.95" />   

	     		<remap from="collision_map_out" to="collision_map_occ" />
	     		<remap from="point_cloud_out" to="octomap_point_cloud" />

	     		<rosparam command="load" file="$(find cob_arm_navigation)/config/$(env ROBOT)/collision_map_sources_laser+stereo.yaml"/>
	   
		     	<!-- self filtering links -->
	     		<rosparam command="load" file="$(find cob_arm_navigation)/config/$(env ROBOT)/self_filter.yaml" /> 
	   	</node>
	</group>

</launch>

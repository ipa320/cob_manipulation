<launch>
  <param name="/use_sim_time" value="true" />
  <include file="$(find cob_arm_navigation)/launch/cob_planning_environment.launch" />
  <node pkg="planning_environment" name="wall_clock_server" type="fake_time.py" />

  <!-- for database -->
  <param name="warehouse_host" value="localhost"/>
  <param name="warehouse_port" value="27020"/>
  <node name="mongo" type="wrapper.py" pkg="mongodb">
    <param name="overwrite" value="false"/>
    <param name="database_path" value="arm_navigation_dbs/cob3_3"/>
  </node>

  <include file="$(find planning_environment)/launch/environment_server.xml">
    <arg name="use_monitor" value="false" />
    <arg name="use_collision_map" value="false" />
  </include>
  <include file="$(find cob_arm_navigation)/launch/constraint_aware_kinematics.xml" />
  <include file="$(find cob_arm_navigation)/launch/ompl_planning.xml" />
  <include file="$(find cob_arm_navigation)/launch/trajectory_filter_server.xml" />
  <node pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />
  <node name="planning_scene_warehouse_viewer" pkg="move_arm_warehouse" type="planning_scene_warehouse_viewer"/>


  <node pkg="rviz" type="rviz" name='rviz_warehouse_viewer' args="-d $(find cob_manipulation_config)/common/planning_scene_warehouse_viewer.vcg" />
  
  <!-- Called when left arm executes trajectory using controllers -->
  <param name="execute_left_trajectory" value="none" />
  <!-- Called when right arm executes trajectory using controllers -->
  <param name="execute_right_trajectory" value="none" />
  <!-- Called to get left arm inverse kinematics with collision checking -->
  <param name="left_ik_name" value="/cob_arm_kinematics/get_constraint_aware_ik" />
  <!-- Called to get right arm inverse kinematics with collision checking -->
  <param name="right_ik_name" value="/cob_arm_kinematics/get_constraint_aware_ik" />
  <!-- Called to get left arm inverse kinematics without collision checking -->
  <param name="non_coll_left_ik_name" value="/cob_arm_kinematics/get_ik" />
  <!-- Called to get right arm inverse kinematics without collision checking -->
  <param name="non_coll_right_ik_name" value="/cob_arm_kinematics/get_ik" />
  <!-- Kinematic chain group name representing the left arm -->
  <param name="left_arm_group" value="arm" />
  <!-- Kinematic chain group name representing the right arm -->
  <param name="right_arm_group" value="arm" />
  <!-- Degree of freedom representing inverse kinematics redundancy on the left arm -->
  <param name="left_redundancy" value="none" />
  <!-- Degree of freedom representing inverse kinematics redundancy on the right arm -->
  <param name="right_redundancy" value="none" />
  <!-- Link on the left arm to perform inverse kinematics for -->
  <param name="left_ik_link" value="arm_7_link" />
  <!-- Link on the right arm to perform inverse kinematics for -->
  <param name="right_ik_link" value="arm_7_link" />
  <!-- Called to plan trajectories given motion plan requests -->
  <param name="planner_service_name" value="/ompl_planning/plan_kinematic_path" />
  <!-- Interpolates between end effector positions for the left arm -->
  <param name="left_interpolate_service_name" value="none" />
  <!-- Interpolates between end effector positions for the right arm -->
  <param name="right_interpolate_service_name" value="none" />
  <!-- Called to smooth and optimize a planner trajectory -->
  <param name="trajectory_filter_service_name" value="/trajectory_filter_server/filter_trajectory_with_constraints" />
  <!-- Called to get the proximity space -->
  <param name="proximity_space_service_name" value="none" />
  <!-- Called to get collision validity of robot state -->
  <param name="proximity_space_validity_name" value="none"/>
  <!-- Called to produce a plan that pulls trajectories out of collision -->
  <param name="proximity_space_planner_name" value="none"/>
  <!-- Called to send the planning scene to the environment server -->
  <param name="set_planning_scene_diff_name" value="environment_server/set_planning_scene_diff"/>
  <param name="vis_topic_name" value="planning_scene_visualizer_markers"/>
</launch>

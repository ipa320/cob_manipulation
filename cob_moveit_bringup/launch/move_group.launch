<?xml version="1.0"?>
<launch>
  <arg name="robot" default="$(optenv ROBOT !!NO_ROBOT_SET!!)"/>
  <arg name="config_path" default="$(find cob_hardware_config)/$(arg robot)/moveit_config"/>
  <arg name="load_robot_description" default="false"/>

  <!-- GDB Debug Option -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- Verbose Mode Option -->
  <arg name="info" default="$(arg debug)" />
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg     if="$(arg info)" name="command_args" value="--debug" />

  <!-- move_group settings -->
  <arg name="allow_trajectory_execution" default="true"/>
  <arg name="fake_execution" default="false"/>
  <arg name="max_safe_path_cost" default="1"/>
  <arg name="jiggle_fraction" default="0.05" />
  <arg name="publish_monitored_planning_scene" default="true"/>
  <arg name="pipeline" default="ompl" />
  <arg name="use_sensors" default="true"/>

  <!-- Planning Functionality -->
  <include file="$(find cob_moveit_bringup)/launch/planning_context.xml">
    <arg name="robot" value="$(arg robot)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <include ns="move_group" file="$(find cob_moveit_bringup)/launch/planning_pipeline.xml">
    <arg name="robot" value="$(arg robot)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
  </include>

  <!-- Trajectory Execution Functionality -->
  <include ns="move_group" file="$(find cob_moveit_bringup)/launch/controller_manager.xml" if="$(arg allow_trajectory_execution)">
    <arg name="config_path" value="$(arg config_path)"/>
    <arg name="fake_execution" value="$(arg fake_execution)"/>
  </include>

  <!-- Sensors Functionality -->
  <include ns="move_group" file="$(find cob_moveit_bringup)/launch/sensor_manager.xml" if="$(arg allow_trajectory_execution)">
    <arg name="config_path" value="$(arg config_path)"/>
    <arg name="use_sensors" value="$(arg use_sensors)"/>
  </include>

  <!-- Start the actual move_group node/action server -->
  <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
    <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

    <!-- MoveGroup capabilities to load -->
    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
                                      move_group/MoveGroupExecuteService
                                      move_group/MoveGroupKinematicsService
                                      move_group/MoveGroupMoveAction
                                      move_group/MoveGroupPickPlaceAction
                                      move_group/MoveGroupPlanService
                                      move_group/MoveGroupQueryPlannersService
                                      move_group/MoveGroupStateValidationService
                                      move_group/MoveGroupGetPlanningSceneService
                                      " />
                                      <!-- you can add 'cob_collision_monitor/CollisionMonitor' to the list above
                                           however, it is recommended to use the standalone-node in cob_collision_monitor -->

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
  </node>

</launch>
